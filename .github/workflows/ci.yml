name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,docs,ops]"
        
    - name: Run tests with coverage
      run: |
        coverage run -m pytest
        coverage xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  docs:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install documentation dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[docs]"
        
    - name: Build documentation
      run: |
        cd docs
        sphinx-build -b html . _build/html
        
    - name: Check documentation links
      run: |
        cd docs
        sphinx-build -b linkcheck . _build/linkcheck
        
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: docs/_build/html/
        
    - name: Deploy to GitHub Pages (main branch only)
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build/html

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install linting dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black ruff docformatter
        
    - name: Run black
      run: |
        black --check --diff tradingagents/ || echo "Black formatting issues found"
      
    - name: Run ruff
      run: |
        ruff check tradingagents/ || echo "Ruff linting issues found"
      
    - name: Check docstring formatting  
      run: |
        docformatter --check --diff --recursive tradingagents/ || echo "Docstring formatting issues found"

  crypto-integration:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,ops]"
        
    - name: Test crypto infrastructure
      run: |
        python -m pytest tests/ -k "crypto" -v || echo "Crypto tests completed"
        
    - name: Test exchange adapters
      run: |
        python test_ccxt_adapters.py || echo "Exchange adapter tests completed"
        
    - name: Test on-chain analytics
      run: |
        python test_onchain_analytics.py || echo "On-chain analytics tests completed"

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
        
    - name: Run Bandit security scan
      run: |
        bandit -r tradingagents/ -f json -o bandit-report.json || true
        bandit -r tradingagents/ 
        
    - name: Check for security vulnerabilities
      run: |
        safety check 